I"ٳ<p>«««&lt; HEAD</p>
<h2 id="f1-predictive-modeling">F1 Predictive Modeling</h2>

<p>I can’t currently find the source of data but it is an extensive set made of multiple tables for years (1950-2017)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">10</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">10</span><span class="p">),</span><span class="w"> </span><span class="m">9</span><span class="o">:</span><span class="m">13</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">11</span><span class="p">,</span><span class="m">10</span><span class="p">),</span><span class="w"> </span><span class="m">9</span><span class="o">:</span><span class="m">10</span><span class="p">)</span><span class="w">
</span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">),</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">7</span><span class="p">,</span><span class="m">5</span><span class="p">),</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">),</span><span class="w">  </span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">8</span><span class="o">:</span><span class="m">9</span><span class="p">)</span><span class="w">

</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">pch</span><span class="o">=</span><span class="m">19</span><span class="p">,</span><span class="w"> </span><span class="n">xlab</span><span class="o">=</span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">ylab</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">xaxt</span><span class="o">=</span><span class="s2">"n"</span><span class="p">,</span><span class="w"> </span><span class="n">yaxt</span><span class="o">=</span><span class="s2">"n"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/F1 Header-1.png" alt="" /><!-- --></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">qplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">y</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/F1 Header-2.png" alt="" /><!-- --></p>

<p>Data is broken down into multiple csv files which will need to be joined on common parameters to gain any insights:</p>
<ul>
  <li>Circuits</li>
  <li>Lap Times</li>
  <li>Races</li>
  <li>Drivers</li>
  <li>Driver Standings</li>
  <li>Results</li>
  <li>
    <h1 id="more-used-for-reference">More used for reference</h1>
    <h2 id="r-markdown">R Markdown</h2>
  </li>
</ul>

<p>This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <a href="http://rmarkdown.rstudio.com">http://rmarkdown.rstudio.com</a>.</p>

<p>When you click the <strong>Knit</strong> button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="m">8</span><span class="o">*</span><span class="m">8</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 64
</code></pre></div></div>
<blockquote>
  <blockquote>
    <blockquote>
      <blockquote>
        <blockquote>
          <blockquote>
            <blockquote>
              <p>master</p>
            </blockquote>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">circuits</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data(1950_2017)/circuits.csv"</span><span class="p">)</span><span class="w">
</span><span class="o">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><span class="w"> </span><span class="n">HEAD</span><span class="w">
</span><span class="n">lapTimes</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data(1950_2017)/lapTimes.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span><span class="n">races</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data(1950_2017)/races.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">stringsAsFactors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning in scan(file = file, what = what, sep = sep, quote = quote, dec = dec, :
## embedded nul(s) found in input
=======
races = read.csv("Data(1950_2017)/races.csv")
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning in scan(file = file, what = what, sep = sep, quote = quote, dec =
## dec, : embedded nul(s) found in input
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">results</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data(1950_2017)/results.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">drivers</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data(1950_2017)/drivers.csv"</span><span class="p">)</span><span class="w">
</span><span class="o">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><span class="w"> </span><span class="n">HEAD</span><span class="w">
</span><span class="n">driverStandings</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data(1950_2017)/driverStandings.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Let’s start by exploring the <code class="highlighter-rouge">Drivers</code> dataset.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># What data types are the features in this set?</span><span class="w">
</span><span class="n">sapply</span><span class="p">(</span><span class="n">drivers</span><span class="p">,</span><span class="w"> </span><span class="n">class</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##    driverId   driverRef      number        code    forename     surname
##   "integer"    "factor"   "integer"    "factor"    "factor"    "factor"
##         dob nationality         url
##    "factor"    "factor"    "factor"
</code></pre></div></div>

<h1 id="drivers">Drivers</h1>

<p>F1 is scored in points, looking at which drivers have the most all-time points. Keep in mind this is dating back to 1950. I’m not familiar if the way Grand Prix are scored has changed. It’s safe to say that for our purpose of predicting future grand prix winners, we will narrow our focus to current drivers. However out of curiousity, let’s look at the all time high scorers.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">drivers_</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">drivers</span><span class="p">,</span><span class="w"> </span><span class="n">driverStandings</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"driverId"</span><span class="p">)</span><span class="w">

</span><span class="n">driverPoints</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">drivers_</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">driverId</span><span class="p">,</span><span class="w"> </span><span class="n">driverRef</span><span class="p">,</span><span class="w"> </span><span class="n">dob</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">points</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">points</span><span class="p">))</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">driverPoints</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">driverId</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">points</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="o">=</span><span class="n">driverRef</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/unnamed-chunk-1-1.png" alt="" /><!-- --></p>

<p>Too much, cut off at 10,000 points and label</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fil</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">as_tibble</span><span class="p">(</span><span class="n">driverPoints</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">driverId</span><span class="p">,</span><span class="w"> </span><span class="n">points</span><span class="p">,</span><span class="w"> </span><span class="n">driverRef</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">driverId</span><span class="p">,</span><span class="w">  </span><span class="n">driverRef</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">points</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">points</span><span class="p">))</span><span class="w">
</span><span class="n">fil</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">fil</span><span class="p">[</span><span class="n">fil</span><span class="o">$</span><span class="n">points</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">10000</span><span class="p">,]</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">fil</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">driverId</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">points</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">driverRef</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_label</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/unnamed-chunk-2-1.png" alt="" /><!-- --></p>

<p>Not a very good visual, we can better compare the drivers points with a bar/histogram style</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">fil</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">driverRef</span><span class="p">,</span><span class="w"> </span><span class="n">points</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">points</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="o">=</span><span class="n">points</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s2">"sum"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Top drivers by points"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Driver Name"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Points"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">labels</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">fixedLabels</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">()</span><span class="w">
    </span><span class="k">for</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">labels</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">fixedLabels</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">ifelse</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="o">==</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="w"> </span><span class="p">,</span><span class="s2">"\n"</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="p">[</span><span class="n">n</span><span class="p">])</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="nf">return</span><span class="p">(</span><span class="n">fixedLabels</span><span class="p">)</span><span class="w">
  </span><span class="p">})</span><span class="w">
</span></code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/top driver hist-1.png" alt="" /><!-- --></p>

<p>Are all of these drivers still alive and competing?</p>

<h1 id="races">Races</h1>

<p>=======</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>


```r
summary(circuits)
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##    circuitId        circuitRef                             name
##  Min.   : 1   adelaide   : 1   A1-Ring                       : 1
##  1st Qu.:19   ain-diab   : 1   Adelaide Street Circuit       : 1
##  Median :37   aintree    : 1   Ain Diab                      : 1
##  Mean   :37   albert_park: 1   Aintree                       : 1
##  3rd Qu.:55   americas   : 1   Albert Park Grand Prix Circuit: 1
##  Max.   :73   anderstorp : 1   Aut\xcc_dromo do Estoril      : 1
##               (Other)    :67   (Other)                       :67
##        location     country        lat              lng
##  Barcelona : 2   USA    :11   Min.   :-37.85   Min.   :-118.189
##  California: 2   France : 7   1st Qu.: 33.58   1st Qu.:  -9.394
##  Spielburg : 2   Spain  : 6   Median : 41.37   Median :   3.931
##  Abu Dhabi : 1   UK     : 4   Mean   : 33.87   Mean   :   1.723
##  Adelaide  : 1   Austria: 3   3rd Qu.: 47.22   3rd Qu.:  14.765
##  Anderstorp: 1   Belgium: 3   Max.   : 57.27   Max.   : 144.968
##  (Other)   :64   (Other):39
##       alt
##  Min.   :10
##  1st Qu.:10
##  Median :10
##  Mean   :10
##  3rd Qu.:10
##  Max.   :10
##  NA's   :72
##                                                                   url
##  http://en.wikipedia.org/wiki/A1-Ring                               : 1
##  http://en.wikipedia.org/wiki/Adelaide_Street_Circuit               : 1
##  http://en.wikipedia.org/wiki/Ain-Diab_Circuit                      : 1
##  http://en.wikipedia.org/wiki/Aintree_Motor_Racing_Circuit          : 1
##  http://en.wikipedia.org/wiki/Aut%C3%B3dromo_do_Estoril             : 1
##  http://en.wikipedia.org/wiki/Aut%C3%B3dromo_Hermanos_Rodr%C3%ADguez: 1
##  (Other)                                                            :67
</code></pre></div></div>

<blockquote>
  <blockquote>
    <blockquote>
      <blockquote>
        <blockquote>
          <blockquote>
            <blockquote>
              <p>master</p>
            </blockquote>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary</span><span class="p">(</span><span class="n">races</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##      raceId          year          round          circuitId
##  Min.   :   1   Min.   :1950   Min.   : 1.000   Min.   : 1.00
##  1st Qu.: 250   1st Qu.:1974   1st Qu.: 4.000   1st Qu.: 9.00
##  Median : 499   Median :1990   Median : 8.000   Median :18.00
##  Mean   : 500   Mean   :1989   Mean   : 8.234   Mean   :21.76
##  3rd Qu.: 748   3rd Qu.:2005   3rd Qu.:12.000   3rd Qu.:30.00
##  Max.   :1009   Max.   :2018   Max.   :21.000   Max.   :73.00
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
##      name               date               time               url
##  Length:997         Length:997         Length:997         Length:997
##  Class :character   Class :character   Class :character   Class :character
##  Mode  :character   Mode  :character   Mode  :character   Mode  :character
##
##
##
</code></pre></div></div>
<p>Let’s do some EDA on the circuits. Take a look at which races have the shortest lap time.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">driver_laps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">races</span><span class="p">,</span><span class="w"> </span><span class="n">lapTimes</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"raceId"</span><span class="p">)</span><span class="w">
</span><span class="n">head</span><span class="p">(</span><span class="n">driver_laps</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   raceId year round circuitId                  name       date   time.x
## 1      1 2009     1         1 Australian Grand Prix 2009-03-29 06:00:00
## 2      1 2009     1         1 Australian Grand Prix 2009-03-29 06:00:00
## 3      1 2009     1         1 Australian Grand Prix 2009-03-29 06:00:00
## 4      1 2009     1         1 Australian Grand Prix 2009-03-29 06:00:00
## 5      1 2009     1         1 Australian Grand Prix 2009-03-29 06:00:00
## 6      1 2009     1         1 Australian Grand Prix 2009-03-29 06:00:00
##                                                       url driverId lap position
## 1 http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix        7   5       15
## 2 http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix        7   6       16
## 3 http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix        7   7       16
## 4 http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix        7   8       16
## 5 http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix        7   9       16
## 6 http://en.wikipedia.org/wiki/2009_Australian_Grand_Prix        7  10       16
##     time.y milliseconds
## 1 1:32.565        92565
## 2 1:33.294        93294
## 3 1:30.891        90891
## 4 1:31.645        91645
## 5 1:52.298       112298
## 6 1:40.160       100160
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Only looking at last 10 years</span><span class="w">
</span><span class="n">driver_laps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">driver_laps</span><span class="p">[</span><span class="n">driver_laps</span><span class="o">$</span><span class="n">year</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">2008</span><span class="p">,]</span><span class="w">
</span><span class="c1">#Add driver name to set</span><span class="w">
</span><span class="n">driver_laps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">driver_laps</span><span class="p">,</span><span class="w"> </span><span class="n">drivers</span><span class="p">[,</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"driverId"</span><span class="p">)</span><span class="w">
</span><span class="nf">length</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">driver_laps</span><span class="o">$</span><span class="n">circuitId</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 26
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">length</span><span class="p">(</span><span class="n">unique</span><span class="p">(</span><span class="n">driver_laps</span><span class="o">$</span><span class="n">raceId</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 173
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">temp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">driver_laps</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">driverRef</span><span class="p">,</span><span class="w"> </span><span class="n">circuitId</span><span class="p">,</span><span class="w"> </span><span class="n">raceId</span><span class="p">,</span><span class="w"> </span><span class="n">name</span><span class="p">)</span><span class="w">

</span><span class="n">prix_list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">races</span><span class="p">[</span><span class="n">races</span><span class="o">$</span><span class="n">year</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="m">2015</span><span class="p">,]</span><span class="w">
</span><span class="n">prix_list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unique</span><span class="p">(</span><span class="n">prix_list</span><span class="o">$</span><span class="n">name</span><span class="p">)</span><span class="w">

</span><span class="n">temp</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">temp</span><span class="p">[</span><span class="nf">as.character</span><span class="p">(</span><span class="n">temp</span><span class="o">$</span><span class="n">name</span><span class="p">)</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">prix_list</span><span class="p">,]</span><span class="w">
</span><span class="n">unique</span><span class="p">(</span><span class="n">temp</span><span class="o">$</span><span class="n">circuitId</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  [1] 73 18 11 10 20  6 15  3 24  4  9  1  7 17  2 70 32 12 13 14 71 22 69
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">prix_list</span><span class="p">)){</span><span class="w">
</span><span class="n">set</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">temp</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">driverRef</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">driverRef</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">driverId_vec</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">name</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">prix_list</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">avg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">milliseconds</span><span class="p">))</span><span class="w">
  </span><span class="n">driverLapTimePlot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">set</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">driverRef</span><span class="p">,</span><span class="n">avg</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">avg</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">avg</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s2">"sum"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">ggtitle</span><span class="p">(</span><span class="n">prix_list</span><span class="p">[</span><span class="n">i</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">scale_x_discrete</span><span class="p">(</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">labels</span><span class="p">){</span><span class="w">
    </span><span class="n">fixedLabels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">()</span><span class="w">
    </span><span class="k">for</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">labels</span><span class="p">)){</span><span class="w">
      </span><span class="n">fixedLabels</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="n">ifelse</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="s2">"\n"</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="p">[</span><span class="n">n</span><span class="p">])</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="nf">return</span><span class="p">(</span><span class="n">fixedLabels</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="p">)</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">driverLapTimePlot</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-1.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-2.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-3.png" alt="" /><!-- --></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning: Removed 836 rows containing non-finite values (stat_sum).
</code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-4.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-5.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-6.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-7.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-8.png" alt="" /><!-- --></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning: Removed 836 rows containing non-finite values (stat_sum).
</code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-9.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-10.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-11.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-12.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-13.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-14.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-15.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-16.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-17.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-18.png" alt="" /><!-- --></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning: Removed 836 rows containing non-finite values (stat_sum).
</code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-19.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-20.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-21.png" alt="" /><!-- --></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning: Removed 838 rows containing non-finite values (stat_sum).
</code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-22.png" alt="" /><!-- --></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Warning: Removed 842 rows containing non-finite values (stat_sum).
</code></pre></div></div>

<p><img src="2020-04-05-formula-one_files/figure-html/race-laptimes-23.png" alt="" /><!-- --></p>

<h1 id="results">Results</h1>

<p>=======
##</p>
<h2 id="name-------------date-----------time">name             date           time</h2>
<h2 id="british-grand-prix-69---1950-05-13--1-----------731">British Grand Prix: 69   1950-05-13:  1           :731</h2>
<h2 id="italian-grand-prix-69---1950-05-21--1---120000118">Italian Grand Prix: 69   1950-05-21:  1   12:00:00:118</h2>
<h2 id="monaco-grand-prix--65---1950-05-30--1---140000-28">Monaco Grand Prix : 65   1950-05-30:  1   14:00:00: 28</h2>
<h2 id="belgian-grand-prix-63---1950-06-04--1---060000-20">Belgian Grand Prix: 63   1950-06-04:  1   06:00:00: 20</h2>
<h2 id="german-grand-prix--63---1950-06-18--1---130000-14">German Grand Prix : 63   1950-06-18:  1   13:00:00: 14</h2>
<h2 id="french-grand-prix--59---1950-07-02--1---160000-12">French Grand Prix : 59   1950-07-02:  1   16:00:00: 12</h2>
<h2 id="other-----------609---other---991---other--74">(Other)           :609   (Other)   :991   (Other) : 74</h2>
<h2 id="url">url</h2>
<h2 id="httpenwikipediaorgwiki1950_belgian_grand_prix--1">http://en.wikipedia.org/wiki/1950_Belgian_Grand_Prix:  1</h2>
<h2 id="httpenwikipediaorgwiki1950_british_grand_prix--1">http://en.wikipedia.org/wiki/1950_British_Grand_Prix:  1</h2>
<h2 id="httpenwikipediaorgwiki1950_french_grand_prix---1">http://en.wikipedia.org/wiki/1950_French_Grand_Prix :  1</h2>
<h2 id="httpenwikipediaorgwiki1950_indianapolis_500----1">http://en.wikipedia.org/wiki/1950_Indianapolis_500  :  1</h2>
<h2 id="httpenwikipediaorgwiki1950_italian_grand_prix--1">http://en.wikipedia.org/wiki/1950_Italian_Grand_Prix:  1</h2>
<h2 id="httpenwikipediaorgwiki1950_monaco_grand_prix---1">http://en.wikipedia.org/wiki/1950_Monaco_Grand_Prix :  1</h2>
<h2 id="other---------------------------------------------991">(Other)                                             :991</h2>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master

```r
summary(results)
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##     resultId         raceId         driverId     constructorId
##  Min.   :    1   Min.   :  1.0   Min.   :  1.0   Min.   :  1.00
##  1st Qu.: 5945   1st Qu.:273.0   1st Qu.: 55.0   1st Qu.:  6.00
##  Median :11889   Median :478.0   Median :154.0   Median : 25.00
##  Mean   :11889   Mean   :487.2   Mean   :226.5   Mean   : 46.28
##  3rd Qu.:17833   3rd Qu.:718.0   3rd Qu.:314.0   3rd Qu.: 57.00
##  Max.   :23781   Max.   :988.0   Max.   :843.0   Max.   :210.00
##
##      number            grid          position       positionText
##  Min.   :  0.00   Min.   : 0.00   Min.   : 1.000   R      :8517
##  1st Qu.:  7.00   1st Qu.: 5.00   1st Qu.: 4.000   F      :1368
##  Median : 15.00   Median :11.00   Median : 7.000   3      : 986
##  Mean   : 16.97   Mean   :11.27   Mean   : 7.782   4      : 986
##  3rd Qu.: 23.00   3rd Qu.:17.00   3rd Qu.:11.000   2      : 984
##  Max.   :208.00   Max.   :34.00   Max.   :33.000   5      : 982
##  NA's   :6                        NA's   :10550    (Other):9954
##  positionOrder       points            laps              time
##  Min.   : 1.00   Min.   : 0.000   Min.   :  0.00           :17773
##  1st Qu.: 7.00   1st Qu.: 0.000   1st Qu.: 20.00   +8:22.19:    5
##  Median :13.00   Median : 0.000   Median : 52.00   +1:29.6 :    4
##  Mean   :13.08   Mean   : 1.601   Mean   : 45.27   0.7     :    4
##  3rd Qu.:19.00   3rd Qu.: 1.000   3rd Qu.: 66.00   46.2    :    4
##  Max.   :39.00   Max.   :50.000   Max.   :200.00   5.7     :    4
##                                                    (Other) : 5983
##   milliseconds        fastestLap         rank       fastestLapTime
##  Min.   : 1474899   Min.   : 2.00   Min.   : 0.0           :18394
##  1st Qu.: 5442948   1st Qu.:29.00   1st Qu.: 5.0    01:17.2:   28
##  Median : 5859428   Median :44.00   Median :11.0    01:16.5:   27
##  Mean   : 6303313   Mean   :41.06   Mean   :10.6    01:16.8:   26
##  3rd Qu.: 6495440   3rd Qu.:53.00   3rd Qu.:16.0    01:28.0:   26
##  Max.   :15090540   Max.   :78.00   Max.   :24.0    01:19.1:   24
##  NA's   :17774      NA's   :18394   NA's   :18246   (Other): 5252
##  fastestLapSpeed    statusId
##         :18394   Min.   :  1.00
##  189.423:    3   1st Qu.:  1.00
##  195.933:    3   Median : 11.00
##  196.785:    3   Mean   : 18.24
##  200.091:    3   3rd Qu.: 16.00
##  201.33 :    3   Max.   :136.00
##  (Other): 5368
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">summary</span><span class="p">(</span><span class="n">drivers</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
##     driverId         driverRef       number           code        forename
##  Min.   :  1.0   abate    :  1   Min.   : 2.00          :757   John   : 14
##  1st Qu.:211.2   abecassis:  1   1st Qu.:10.25   BIA    :  2   Mike   : 14
##  Median :421.5   acheson  :  1   Median :21.50   HAR    :  2   Peter  : 13
##  Mean   :421.5   adamich  :  1   Mean   :30.50   MAG    :  2   Bill   : 11
##  3rd Qu.:631.8   adams    :  1   3rd Qu.:38.25   VER    :  2   Tony   : 11
##  Max.   :843.0   ader     :  1   Max.   :99.00   ALB    :  1   Bob    : 10
##                  (Other)  :836   NA's   :804     (Other): 76   (Other):769
##        surname            dob         nationality
##  Taylor    :  5   02/10/1921:  2   British  :162
##  Wilson    :  4   04/09/1920:  2   American :157
##  Brabham   :  3   05/05/1932:  2   Italian  : 99
##  Brown     :  3   06/06/1923:  2   French   : 73
##  Fittipaldi:  3   06/10/1918:  2   German   : 49
##  Hill      :  3   12/12/1946:  2   Brazilian: 31
##  (Other)   :821   (Other)   :830   (Other)  :271
=======
##     driverId         driverRef       number           code
##  Min.   :  1.0   abate    :  1   Min.   : 2.00          :757
##  1st Qu.:211.2   abecassis:  1   1st Qu.:10.25   BIA    :  2
##  Median :421.5   acheson  :  1   Median :21.50   HAR    :  2
##  Mean   :421.5   adamich  :  1   Mean   :30.50   MAG    :  2
##  3rd Qu.:631.8   adams    :  1   3rd Qu.:38.25   VER    :  2
##  Max.   :843.0   ader     :  1   Max.   :99.00   ALB    :  1
##                  (Other)  :836   NA's   :804     (Other): 76
##     forename         surname            dob         nationality
##  John   : 14   Taylor    :  5   02/10/1921:  2   British  :162
##  Mike   : 14   Wilson    :  4   04/09/1920:  2   American :157
##  Peter  : 13   Brabham   :  3   05/05/1932:  2   Italian  : 99
##  Bill   : 11   Brown     :  3   06/06/1923:  2   French   : 73
##  Tony   : 11   Fittipaldi:  3   06/10/1918:  2   German   : 49
##  Bob    : 10   Hill      :  3   12/12/1946:  2   Brazilian: 31
##  (Other):769   (Other)   :821   (Other)   :830   (Other)  :271
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master
##                                                           url
##                                                             :  1
##  http://en.wikipedia.org/wiki/%C3%89lie_Bayol               :  1
##  http://en.wikipedia.org/wiki/%C3%89ric_Bernard             :  1
##  http://en.wikipedia.org/wiki/%C3%89rik_Comas               :  1
##  http://en.wikipedia.org/wiki/%C3%93scar_Alfredo_G%C3%A1lvez:  1
##  http://en.wikipedia.org/wiki/A.J._Foyt                     :  1
##  (Other)                                                    :836
</code></pre></div></div>

<p>«««&lt; HEAD</p>

<p>Let’s create our <code class="highlighter-rouge">MASTER</code> set here, containing all info we can foresee as necessary going forward.</p>

<p>=======</p>
<blockquote>
  <blockquote>
    <blockquote>
      <blockquote>
        <blockquote>
          <blockquote>
            <blockquote>
              <p>master</p>
              <h2 id="including-plots">Including Plots</h2>
            </blockquote>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>

<p>You can also embed plots, for example:</p>

<p><img src="2020-04-05-formula-one_files/figure-html/pressure-1.png" alt="" /><!-- --><img src="2020-04-05-formula-one_files/figure-html/pressure-2.png" alt="" /><!-- --></p>

<p>Note that the <code class="highlighter-rouge">echo = FALSE</code> parameter was added to the code chunk to prevent printing of the R code that generated the plot.</p>
:ET